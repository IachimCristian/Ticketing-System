@page
@model TicketingSystem.Web.Pages.Admin.IndexModel
@{
    ViewData["Title"] = "Admin Dashboard";
    Layout = "_AdminLayout";
}

<div class="admin-content active" id="dashboard-content">
    <h3 class="mb-4">Dashboard Overview</h3>
    
    <div class="row">
        <div class="col-md-3 mb-4">
            <div class="card">
                <div class="card-body">
                    <h5 class="card-title">Users</h5>
                    <p class="card-text">Total: @Model.UserCount</p>
                    <a href="#" class="btn btn-dark btn-sm" onclick="showSection('users')">Manage Users</a>
                </div>
            </div>
        </div>
        
        <div class="col-md-3 mb-4">
            <div class="card">
                <div class="card-body">
                    <h5 class="card-title">Events</h5>
                    <p class="card-text">Total: @Model.EventCount</p>
                    <a href="#" class="btn btn-dark btn-sm" onclick="showSection('events')">Manage Events</a>
                </div>
            </div>
        </div>
        
        <div class="col-md-3 mb-4">
            <div class="card">
                <div class="card-body">
                    <h5 class="card-title">Transactions</h5>
                    <p class="card-text">Total: @Model.TransactionCount</p>
                    <a href="#" class="btn btn-dark btn-sm" onclick="showSection('transactions')">View Transactions</a>
                </div>
            </div>
        </div>
        
        <div class="col-md-3 mb-4">
            <div class="card">
                <div class="card-body">
                    <h5 class="card-title">Refunds</h5>
                    <p class="card-text">Manage ticket refunds</p>
                    <a href="/Admin/Refunds" class="btn btn-dark btn-sm">Manage Refunds</a>
                </div>
            </div>
        </div>
    </div>
    
    <div class="row">
        <div class="col-md-3 mb-4">
            <div class="card">
                <div class="card-body">
                    <h5 class="card-title">Test Notifications</h5>
                    <p class="card-text">Test notification system</p>
                    <a href="/Admin/TestNotifications" class="btn btn-dark btn-sm">Test System</a>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="admin-content" id="users-content">
    <h3 class="mb-4">Users Management</h3>
    <div class="card">
        <div class="card-body">
            <form method="post" asp-page="/Admin/Index">
                <div class="table-responsive">
                    <table class="table table-hover">
                        <thead>
                            <tr>
                                <th>Username</th>
                                <th>Email</th>
                                <th>Type</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            @for (int i = 0; i < Model.Users.Count; i++)
                            {
                                var user = Model.Users[i];
                                var currentUsername = HttpContext.Session.GetString("Username");
                                var isCurrentAdmin = user.Username == currentUsername;

                                <tr id="user-row-@user.Id">
                                    <td>
                                        @user.Username
                                        <input type="hidden" name="Users[@i].Id" value="@user.Id" />
                                        <input type="hidden" name="Users[@i].Username" value="@user.Username" />
                                    </td>
                                    <td>
                                        <input type="text" class="form-control" name="Users[@i].Email" value="@user.Email" />
                                    </td>
                                    <td>
                                        <select name="Users[@i].UserType" class="form-select" @(isCurrentAdmin ? "disabled" : "")>
                                            <option value="Customer" selected="@(user.UserType == "Customer" ? "selected" : null)">Customer</option>
                                            <option value="Organizer" selected="@(user.UserType == "Organizer" ? "selected" : null)">Organizer</option>
                                            <option value="Admin" selected="@(user.UserType == "Admin" ? "selected" : null)">Admin</option>
                                        </select>
                                    </td>
                                    <td>
                                        <button type="button" class="btn btn-sm btn-outline-danger"
                                                onclick="removeUser('@user.Id', '@user.UserType')">Remove</button>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
                <div class="text-end mt-3">
                    <button type="submit" class="btn btn-success">Save Changes</button>
                </div>
            </form>
        </div>
    </div>
</div>

<div class="admin-content" id="events-content">
    <h3 class="mb-4">Events Management</h3>
    <div class="card">
        <div class="card-body">
            <div class="table-responsive">
                <table class="table table-hover">
                    <thead>
                        <tr>
                            <th>Title</th>
                            <th>Date</th>
                            <th>Location</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var evt in Model.Events)
                        {
                            <tr>
                                <td>@evt.Title</td>
                                <td>@evt.Date.ToString("MMM dd, yyyy")</td>
                                <td>@evt.Location</td>
                                <td>
                                    <button class="btn btn-sm btn-outline-dark">Edit</button>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

<div class="admin-content" id="transactions-content">
    <h3 class="mb-4">Transactions History</h3>
    <div class="card">
        <div class="card-body">
            <div class="table-responsive">
                <table class="table table-hover">
                    <thead>
                        <tr>
                            <th>ID</th>
                            <th>User</th>
                            <th>Event</th>
                            <th>Amount</th>
                            <th>Date</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var transaction in Model.Transactions)
                        {
                            <tr>
                                <td>@transaction.Id.ToString().Substring(0, 8)</td>
                                <td>@transaction.Username</td>
                                <td>@transaction.EventTitle</td>
                                <td>$@transaction.Amount.ToString("0.00")</td>
                                <td>@transaction.Date.ToString("MMM dd, yyyy")</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>


@section Scripts {
    <script>
        async function removeUser(id, userType) {
            if (!confirm("Are you sure you want to remove this user?")) return;

            const formData = new FormData();
            formData.append("id", id);
            formData.append("userType", userType);

            const response = await fetch('/Admin/Index?handler=Remove', {
                method: "POST",
                body: formData
            });

            if (response.ok) {
                document.getElementById(`user-row-${id}`).remove();
            } else {
                alert("Error removing user.");
            }
        }

        function showSection(section) {
            // Hide all content sections
            document.querySelectorAll('.admin-content').forEach(el => {
                el.classList.remove('active');
            });

            // Show the selected section
            document.getElementById(section + '-content').classList.add('active');

            // Update active nav item
            document.querySelectorAll('.admin-nav-item').forEach(el => {
                el.classList.remove('active');
            });

            const navItem = document.querySelector(`.admin-nav-item[data-section="${section}"]`);
            if (navItem) {
                navItem.classList.add('active');
            }
        }

            document.addEventListener('DOMContentLoaded', function () {
            const section = '@ViewData["Section"]' || 'dashboard';
            showSection(section);
        });

    </script>
}