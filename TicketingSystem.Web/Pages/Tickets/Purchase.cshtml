@page "{eventId}"
@model TicketingSystem.Web.Pages.Tickets.PurchaseModel
@{
    ViewData["Title"] = "Ticket Purchase";
}

<div class="d-flex justify-content-between align-items-center mb-3">
    <div>
        <img src="~/images/logo-no-background.png" alt="Ticksy" style="height: 40px;" />
    </div>
    <a asp-page="/Events/Index" class="btn btn-outline-secondary btn-sm">Back</a>
</div>

<h2 class="fs-4 mb-3">Ticket Purchase</h2>

@if (!string.IsNullOrEmpty(Model.ErrorMessage))
{
    <div class="alert alert-danger">
        @Model.ErrorMessage
    </div>
}

@if (Model.Event != null)
{
    <div class="card mb-4">
        <div class="card-body">
            <div class="row">
                <div class="col-md-4">
                    @* Event image has been removed from the model *@
                    <div class="event-image-placeholder mb-3">
                        <span>X</span>
                    </div>
                </div>
                <div class="col-md-8">
                    <h5>@Model.Event.Title</h5>
                    <p class="mb-2"><strong>Date:</strong> @Model.Event.StartDate.ToString("MMMM d, yyyy")</p>
                    <p class="mb-2"><strong>Time:</strong> @Model.Event.StartDate.ToString("h:mm tt") - @Model.Event.EndDate.ToString("h:mm tt")</p>
                    <p class="mb-2"><strong>Location:</strong> @Model.Event.Location</p>
                    <p class="mb-2">
                        <strong>Base Price:</strong> 
                        @if (Model.Event.TicketPrice <= 0)
                        {
                            <span>Free</span>
                        }
                        else
                        {
                            <span>$@Model.Event.TicketPrice.ToString("0.00")</span>
                        }
                    </p>
                </div>
            </div>
        </div>
    </div>

    <form method="post">
        <input type="hidden" asp-for="EventId" />

        <div class="card mb-4">
            <div class="card-header">
                <h5 class="mb-0">Select Seat</h5>
            </div>
            <div class="card-body">
                <div class="seat-selection-container">
                    <div class="seat-legend mb-3">
                        @foreach (var seatSection in Model.SeatSections)
                        {
                            <div class="seat-legend-item">
                                <div class="seat-icon" style="background-color: @seatSection.Color;"></div>
                                <div>
                                    <div>Section @seatSection.Name</div>
                                    <div class="text-muted small">$@seatSection.FinalPrice.ToString("0.00")</div>
                                </div>
                            </div>
                        }
                        <div class="seat-legend-item">
                            <div class="seat-icon seat-unavailable"></div>
                            <div>
                                <div>Unavailable</div>
                            </div>
                        </div>
                    </div>

                    <div class="airplane-container">
                        @for (int i = 0; i < Model.SeatLayout.Count; i++)
                        {
                            var row = Model.SeatLayout[i];
                            <div class="seat-row">
                                <div class="row-number">Row @(i + 1)</div>
                                @for (int j = 0; j < row.Count; j++)
                                {
                                    var seat = row[j];
                                    string seatNumber = (j + 1).ToString();
                                    string seatId = $"seat-{i+1}-{j}";
                                    string seatClass = seat.IsAvailable ? "seat" : "seat seat-unavailable";
                                    seatClass += j == 5 || j == 14 ? " seat-aisle" : "";

                                    <div class="seat-cell">
                                        @if (seat.IsAvailable)
                                        {
                                            <input type="radio" 
                                                   id="@seatId" 
                                                   name="seatSelection" 
                                                   value="@(seat.Row),@(seat.Column)" 
                                                   class="seat-input" 
                                                   onchange="selectSeat(@seat.Row, @seat.Column, '@seat.Section', @seat.Price)" />
                                            <label for="@seatId" 
                                                   class="@seatClass" 
                                                   style="background-color: @seat.SectionColor;" 
                                                   title="Row @(i+1) Seat @(j+1) - Section @seat.Section - $@seat.Price.ToString("0.00")">
                                                @seatNumber
                                            </label>
                                        }
                                        else
                                        {
                                            <div class="@seatClass" title="Seat unavailable - Already purchased">@seatNumber</div>
                                        }
                                    </div>
                                }
                            </div>
                        }
                    </div>
                </div>
                
                <div class="seat-selection-summary mt-4">
                    <div class="card">
                        <div class="card-body">
                            <h6>Selected Seat</h6>
                            <div id="selectedSeatInfo" class="mb-3">
                                <span class="text-muted">No seat selected</span>
                            </div>
                            <input type="hidden" asp-for="SelectedRow" id="selectedRow" />
                            <input type="hidden" asp-for="SelectedColumn" id="selectedColumn" />
                        </div>
                    </div>
                </div>
            </div>
        </div>
        
        <div class="card mb-4">
            <div class="card-header">
                <h5 class="mb-0">Payment</h5>
            </div>
            <div class="card-body">
                <div class="mb-3">
                    <label class="form-label">Payment Method</label>
                    <div>
                        <div class="form-check form-check-inline">
                            <input class="form-check-input" type="radio" asp-for="PaymentMethod" id="creditCard" value="creditcard" checked />
                            <label class="form-check-label" for="creditCard">Credit Card</label>
                        </div>
                        <div class="form-check form-check-inline">
                            <input class="form-check-input" type="radio" asp-for="PaymentMethod" id="paypal" value="paypal" />
                            <label class="form-check-label" for="paypal">PayPal</label>
                        </div>
                    </div>
                </div>
                
                <div id="creditCardDetails">
                    <div class="mb-3">
                        <label class="form-label">Card Number</label>
                        <input type="text" class="form-control" asp-for="CardNumber" placeholder="1234 5678 9012 3456" />
                        <span asp-validation-for="CardNumber" class="text-danger"></span>
                    </div>
                    
                    <div class="row">
                        <div class="col-md-6 mb-3">
                            <label class="form-label">Expiry Date</label>
                            <input type="text" class="form-control" asp-for="ExpiryDate" placeholder="MM/YY" />
                            <span asp-validation-for="ExpiryDate" class="text-danger"></span>
                        </div>
                        <div class="col-md-6 mb-3">
                            <label class="form-label">CVV</label>
                            <input type="text" class="form-control" asp-for="Cvv" placeholder="123" />
                            <span asp-validation-for="Cvv" class="text-danger"></span>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        
        <div class="text-end mb-4">
            <button type="submit" class="btn btn-dark" id="purchaseButton" disabled>Purchase</button>
        </div>
    </form>
}

<style>
    .event-image-placeholder {
        height: 150px;
    }
    
    .seat-selection-container {
        margin-bottom: 20px;
    }
    
    .seat-legend {
        display: flex;
        flex-wrap: wrap;
        gap: 20px;
    }
    
    .seat-legend-item {
        display: flex;
        align-items: center;
        gap: 8px;
    }
    
    .seat-icon {
        width: 24px;
        height: 24px;
        border: 1px solid #ccc;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 12px;
        color: #666;
    }
    
    .seat-unavailable {
        background-color: #7f8c8d !important;
        color: #ecf0f1;
        position: relative;
        overflow: hidden;
    }
    
    .seat-unavailable::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background: repeating-linear-gradient(
            45deg,
            rgba(255, 0, 0, 0.3),
            rgba(255, 0, 0, 0.3) 5px,
            rgba(255, 0, 0, 0) 5px,
            rgba(255, 0, 0, 0) 10px
        );
    }
    
    .airplane-container {
        display: flex;
        flex-direction: column;
        align-items: center;
        gap: 5px;
        border: 1px solid #ddd;
        padding: 20px;
        background-color: #f9f9f9;
        width: 100%;
        min-height: 200px;
        overflow-x: auto;
        box-shadow: inset 0 0 5px rgba(0,0,0,0.1);
    }
    
    .airplane-header {
        position: relative;
        width: 100%;
        text-align: center;
        margin-bottom: 15px;
    }
    
    .airplane-front {
        background-color: #e0e0e0;
        display: inline-block;
        padding: 5px 15px;
        border-radius: 4px;
    }
    
    .seat-row {
        display: flex;
        align-items: center;
        margin-bottom: 5px;
        width: 100%;
        justify-content: center;
        flex-wrap: nowrap;
    }
    
    .row-number {
        width: 70px;
        text-align: left;
        padding-right: 10px;
        font-weight: bold;
        flex-shrink: 0;
        font-size: 14px;
    }
    
    .seat-cell {
        position: relative;
        width: 30px;
        height: 30px;
        margin: 2px;
        flex-shrink: 0;
        display: inline-block;
    }
    
    .seat {
        display: flex;
        align-items: center;
        justify-content: center;
        width: 100%;
        height: 100%;
        border: 1px solid #ccc;
        border-radius: 4px;
        cursor: pointer;
        font-size: 10px;
        user-select: none;
        background-color: #3498db;
        color: white;
        font-weight: bold;
    }
    
    .seat-input {
        position: absolute;
        opacity: 0;
        cursor: pointer;
        width: 0;
        height: 0;
    }
    
    .seat-input:checked + .seat {
        border: 2px solid #212121;
        box-shadow: 0 0 0 2px rgba(0, 0, 0, 0.3);
    }
    
    .seat-aisle {
        margin-right: 15px;
    }
    
    #selectedSeatInfo {
        padding: 10px;
        border: 1px solid #ddd;
        border-radius: 4px;
    }
</style>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            console.log('DOM loaded');
            
            const creditCardMethod = document.getElementById('creditCard');
            const payPalMethod = document.getElementById('paypal');
            const creditCardDetails = document.getElementById('creditCardDetails');
            const form = document.querySelector('form');
            
            // Function to toggle credit card fields visibility
            function toggleCreditCardFields() {
                if (creditCardMethod.checked) {
                    creditCardDetails.style.display = 'block';
                } else if (payPalMethod.checked) {
                    creditCardDetails.style.display = 'none';
                }
            }
            
            // Set initial state on page load
            toggleCreditCardFields();
            
            // Add event listeners
            creditCardMethod.addEventListener('change', toggleCreditCardFields);
            payPalMethod.addEventListener('change', toggleCreditCardFields);
            
            // Initialize jQuery validation
            var validator = $("form").validate({
                rules: {
                    SelectedRow: {
                        required: true,
                        min: 1
                    },
                    SelectedColumn: {
                        required: true,
                        min: 0
                    },
                    CardNumber: {
                        required: function() {
                            return creditCardMethod.checked;
                        },
                        creditcard: function() {
                            return creditCardMethod.checked;
                        }
                    },
                    ExpiryDate: {
                        required: function() {
                            return creditCardMethod.checked;
                        }
                    },
                    Cvv: {
                        required: function() {
                            return creditCardMethod.checked;
                        },
                        digits: true,
                        minlength: 3,
                        maxlength: 4
                    }
                },
                messages: {
                    SelectedRow: "Please select a seat",
                    SelectedColumn: "Please select a seat",
                    CardNumber: {
                        required: "Please enter your credit card number",
                        creditcard: "Please enter a valid credit card number"
                    },
                    ExpiryDate: "Please enter the expiry date",
                    Cvv: {
                        required: "Please enter the CVV",
                        digits: "CVV must contain only digits",
                        minlength: "CVV must be at least 3 digits",
                        maxlength: "CVV cannot be more than 4 digits"
                    }
                },
                errorPlacement: function(error, element) {
                    if (element.attr("name") === "SelectedRow" || element.attr("name") === "SelectedColumn") {
                        error.appendTo("#selectedSeatInfo");
                    } else {
                        error.insertAfter(element);
                    }
                },
                submitHandler: function(form) {
                    console.log('Form is valid, submitting...');
                    form.submit();
                }
            });
            
            // Debug form submission
            form.addEventListener('submit', function(e) {
                console.log('Form submitted');
                console.log('Selected Row:', document.getElementById('selectedRow').value);
                console.log('Selected Column:', document.getElementById('selectedColumn').value);
                console.log('Payment Method:', document.querySelector('input[name="PaymentMethod"]:checked').value);
                console.log('Form Valid:', validator.form());
                
                if (!document.getElementById('selectedRow').value || !document.getElementById('selectedColumn').value) {
                    e.preventDefault();
                    console.log('Form submission prevented: No seat selected');
                    alert('Please select a seat before proceeding with the purchase.');
                    return false;
                }
                
                var errors = validator.errorList;
                if (errors.length > 0) {
                    console.log('Validation errors:', errors);
                    e.preventDefault();
                    return false;
                }
                
                console.log('Form submission proceeding...');
                return true;
            });
        });
        
        function selectSeat(row, column, section, price) {
            console.log('Seat selected:', row, column, section, price);
            document.getElementById('selectedRow').value = row;
            document.getElementById('selectedColumn').value = column;
            
            const formattedPrice = new Intl.NumberFormat('en-US', { 
                style: 'currency', 
                currency: 'USD' 
            }).format(price);
            
            document.getElementById('selectedSeatInfo').innerHTML = `
                <div>
                    <strong>Seat:</strong> Row ${row}, Seat ${column + 1} (Section ${section})
                </div>
                <div>
                    <strong>Price:</strong> ${formattedPrice}
                </div>
            `;
            
            document.getElementById('purchaseButton').disabled = false;
            
            // Trigger validation
            $("form").validate().element("#selectedRow");
            $("form").validate().element("#selectedColumn");
        }
    </script>
} 